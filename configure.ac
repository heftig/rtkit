# -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

# This file is part of RealtimeKit.
#
# Copyright 2009 Lennart Poettering
#
# RealtimeKit is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# RealtimeKit is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with RealtimeKit. If not, see <http://www.gnu.org/licenses/>.

AC_PREREQ(2.68)

AC_INIT([rtkit],
        [0.12],
        [mzegxvg (at) 0pointer (dot) net],
        [rtkit],
        [http://git.0pointer.de/?p=rtkit.git])

AC_CONFIG_SRCDIR([rtkit-daemon.c])
AC_CONFIG_HEADERS([config.h])
AC_CONFIG_MACRO_DIR(m4)
AC_CONFIG_AUX_DIR([build-aux])

AM_INIT_AUTOMAKE([foreign 1.11 -Wno-portability silent-rules -Wall tar-pax no-dist-gzip dist-xz])
AM_SILENT_RULES([yes])

AC_CANONICAL_HOST

if type -p stow > /dev/null && test -d /usr/local/stow ; then
        AC_MSG_NOTICE([*** Found /usr/local/stow: default install prefix set to /usr/local/stow/${PACKAGE_NAME}-${PACKAGE_VERSION} ***])
        ac_default_prefix="/usr/local/stow/${PACKAGE_NAME}-${PACKAGE_VERSION}"
fi

#### Checks for programs. ####

# CC

AC_PROG_CC
AC_PROG_CC_C99
AM_PROG_CC_C_O
AC_PROG_GCC_TRADITIONAL
AC_USE_SYSTEM_EXTENSIONS
AC_SYS_LARGEFILE

# GCC flags

CC_CHECK_FLAGS_APPEND([with_cflags], [CFLAGS], [\
        -pipe \
        -Wall \
        -W \
        -Wextra \
        -Winline \
        -Wvla \
        -Wundef \
        -Wformat=2 \
        -Wlogical-op \
        -Wsign-compare \
        -Wformat-security \
        -Wmissing-include-dirs \
        -Wformat-nonliteral \
        -Wold-style-definition \
        -Wpointer-arith \
        -Winit-self \
        -Wdeclaration-after-statement \
        -Wfloat-equal \
        -Wmissing-prototypes \
        -Wstrict-prototypes \
        -Wredundant-decls \
        -Wmissing-declarations \
        -Wmissing-noreturn \
        -Wshadow \
        -Wendif-labels \
        -Wcast-align \
        -Wstrict-aliasing=2 \
        -Wwrite-strings \
        -Wno-long-long \
        -Wno-overlength-strings \
        -Wno-unused-parameter \
        -Wno-missing-field-initializers \
        -Wno-unused-result \
        -Wunsafe-loop-optimizations \
        -Wpacked \
        -Werror=overflow \
        -Wp,-D_FORTIFY_SOURCE=2 \
        -ffast-math \
        -fno-common \
        -fdiagnostics-show-option \
        -fno-strict-aliasing \
        -ffunction-sections \
        -fdata-sections])
AC_SUBST([WARNINGFLAGS], $with_cflags)

CC_CHECK_FLAGS_APPEND([with_ldflags], [LDFLAGS], [\
        -Wl,--as-needed \
        -Wl,--gc-sections])
AC_SUBST([GCLDFLAGS], $with_ldflags)

ACX_PTHREAD
LIBS="$PTHREAD_LIBS $LIBS"
CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
CC="$PTHREAD_CC"

AC_SEARCH_LIBS([sched_setscheduler], [rt])
AC_SEARCH_LIBS([mq_open], [rt])
AC_SEARCH_LIBS([cap_init], [cap])

PKG_CHECK_MODULES(DBUS, dbus-1)

AC_ARG_ENABLE([libsystemd],
	AS_HELP_STRING([--enable-libsystemd], [use the libsystemd sd-daemon API to communicate with systemd (default: automatic)]))
AS_IF([test "x${enable_libsystemd}" != "xno"],
	[PKG_CHECK_MODULES(LIBSYSTEMD, libsystemd, [have_libsystemd=yes], [have_libsystemd=no])],
	[have_libsystemd=no])
AS_IF([test "x${have_libsystemd}" = "xyes"],
	[AC_DEFINE([HAVE_LIBSYSTEMD], [1], [Define to 1 if you have libsystemd and its header files])],
	[AS_IF([test "x${enable_libsystemd}" = "xyes"],
		[AC_MSG_ERROR([sd-daemon support requested but libsystemd not found])
	])
])

AC_ARG_WITH([systemdsystemunitdir],
        AS_HELP_STRING([--with-systemdsystemunitdir=DIR], [Directory for systemd service files]),
        [],
        [with_systemdsystemunitdir=$($PKG_CONFIG --variable=systemdsystemunitdir systemd)])
AC_SUBST([systemdsystemunitdir], [$with_systemdsystemunitdir])
AM_CONDITIONAL(HAVE_SYSTEMD, [test -n "$with_systemdsystemunitdir"])

AC_PROG_SED
AC_PATH_PROG([XXD], [xxd], [xxd])
if test "$XXD" = xxd; then
        AC_MSG_WARN([xxd not found, cannot compile introspection XML])
fi

###################################
#            Output               #
###################################

AC_CONFIG_FILES([
Makefile
])
AC_OUTPUT

echo "
 ---{ $PACKAGE_NAME $VERSION }---

    prefix:                 ${prefix}
    sysconfdir:             ${sysconfdir}
    localstatedir:          ${localstatedir}
    Compiler:               ${CC}
    CFLAGS:                 ${CFLAGS}
    systemd unit directory: ${systemdsystemunitdir}
    use sd-daemon API:      ${have_libsystemd}
"
